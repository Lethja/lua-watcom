name: Lua for Watcom

on: push

jobs:
  Watcom:
    name: Build Lua with Open Watcom
    runs-on: ubuntu-latest

    steps:
    - uses: open-watcom/setup-watcom@v0
      with:
        version: "1.9"
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Build Lua for DOS 16-bit
      run: |
        export INCLUDE=$WATCOM/h
        wmake -f wm_dos16.mak

    - name: Build Lua for DOS4GW 32-bit Extender
      run: |
        export INCLUDE=$WATCOM/h
        wmake -f wm_dos4g.mak

    - name: Build Lua for Windows 95
      run: |
        export INCLUDE=$WATCOM/h/nt:$WATCOM/h
        wmake -f wm_winnt.mak

    - name: Build Lua for OS/2 16-bit
      run: |
        export INCLUDE=$WATCOM/h/os2:$WATCOM/h
        wmake -f wm_os216.mak

    - name: Build Lua for OS/2 32-bit
      run: |
        export INCLUDE=$WATCOM/h/os2:$WATCOM/h
        wmake -f wm_os232.mak

    - name: UPX Binary Compression
      uses: crazy-max/ghaction-upx@v3
      with:
        version: latest
        args: -9 --8086
        files: |
          dist/bin/lua16.exe
          dist/bin/lua4g.exe
          dist/bin/luant.exe

    - name: Copy DOS4GW Binary
      run: |
          cp $WATCOM/binw/dos4gw.exe dist/bin/

    - name: Install Post Build Packaging Tools
      run: |
          sudo apt-get update
          sudo apt-get install -y dos2unix mtools zip

    - name: Ensure Lua Scripts Have CR/LF Line Endings
      run: |
          unix2dos *.lua

    - name: Create Binaries Zip
      run: |
        zip -j9 --DOS-names "dist/Lua Exe.zip" dist/bin/*.exe example.lua

    - name: Create 160k 16-bit DOS Floppy Diskette Image
      run: |
          mformat -C -i dist/Lua160k.ima -v "LUA DOS" -f 160
          mcopy -i dist/Lua160k.ima dist/bin/lua16.exe example.lua ::

    - name: Create 1.4M Multi-Platform Floppy Diskette Image
      run: |
          mformat -C -i dist/LuaMulti.ima -v "LUA MULTIOS" -f 1440
          mcopy -i dist/LuaMulti.ima dist/bin/*.exe example.lua ::

    - name: Create Floppy Disk Images Zip
      run: |
          zip -j9 --DOS-names "dist/Lua Ima.zip" dist/*.ima

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: 'Lua Binaries'
        path: dist/*.zip
        compression-level: 0

  Draft:
    name: Draft Release
    needs: Watcom
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: List Directory
        run: |
          pwd
          ls -R

      - name: Install GitHub CLI
        run: |
          sudo apt-get update && sudo apt-get install -y gh

      - name: Create Draft Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}" # Extract the tag name
          gh release create "$TAG_NAME" \
            --draft \
            --title "$TAG_NAME" \
            --notes "Lua for Watcom builds from $TAG_NAME" \
            "Lua Binaries/*.zip"
